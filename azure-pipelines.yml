#
# Will deploy openshift in different Use Cases.
# Needs some variables to be set in azure pipelines Web IHM to work.
# * Azure Stack needed vars: 
#     azs_pool_name: Azure Pipelines pool to use with Azure Stack (VM must be able to reach your Azure Stack)
#     azs_arm_endpoint: The ResourceManagerUrl in the Azure Stack (example: https://management.local.azurestack.external)
#     azs_suffix_storage_endpoint: use an endpoint for your Azure Stack (example: local.azurestack.external)
#     azs_suffix_keyvault_dns: use an endpoint for your Azure Stack (example: .vault.local.azurestack.external)
#     azs_subscription_id: Subscrition ID to use to test the deployment of OpenShift on Azure Stack
#     azs_location: Azure Stack location to use
#     azs_redhat_publisher: vm image publisher in the azure stack marketplace
#     azs_redhat_offer: vm image offer in the azure stack marketplace
#     azs_redhat_sku: vm image sku in the azure stack marketplace
#     azs_redhat_version: vm image version in the azure stack marketplace
#
# * Service Principal needed vars:
#     sp_app_id: Service Principal Application ID
#     sp_tenant_id: Service Principal Tenant ID
#     sp_secret: Service Principal Secret (must be stored encrypted, see: https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#secret-variables)
#
# * Templates needed vars:
#     arm_rhsm_username_or_org_Id: Red Hat Subscription Manager Username or Organization ID
#     arm_rhsm_pool_id: The Red Hat Subscription Manager Pool ID that contains your OpenShift entitlements for compute nodes
#     arm_rhsm_broker_pool_id: The Red Hat Subscription Manager Pool ID that contains your OpenShift entitlements for masters and infra nodes. If you don't have different pool IDs, enter same pool ID as 'arm_rhsm_pool_id'
#     arm_rhsm_password_or_activation_key: Red Hat Subscription Manager password or activation key(must be stored encrypted, see: https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#secret-variables) 
#     
trigger:
- stack311*

variables:
  local_id: $(Build.BuildNumber).$(Build.BuildId)
  #Must be changed according to repo/branch
  artifacts_location: https://raw.githubusercontent.com/ssgtc/openshift-container-platform/stack311ci

stages:
- stage: azs_deploy
  displayName: Azure Stack Deploy
  jobs:
  - job: azs_ocp_2masterlb_selfsignedcerts
    displayName: OCP with 2 Master LB and self signed certificates
    pool: $(azs_pool_name)
    timeoutInMinutes: 120
    variables:
      rg_name: ci_ocp_2_mlb_sscerts_$(local_id)
      keyvault_name: vault-2mlbsscerts-$(Build.BuildId)
      zone: contoso.com
      masterapi_sname: internal
      masterapi_ip: 10.1.0.200
    steps:

    # The cloud may have already been registered. We ignore any error
    - script: |
        az cloud register -n AzureStackUser \
          --endpoint-resource-manager "$(azs_arm_endpoint)" \
          --suffix-storage-endpoint "$(azs_suffix_storage_endpoint)" \
          --suffix-keyvault-dns "$(azs_suffix_keyvault_dns)"
        az cloud update --profile 2019-03-01-hybrid
        #echo "Anything because we want to always exit with 0 in case AzureStackUser already exists"
      displayName: az cloud registering Azure Stack

    - script: az cloud set --name AzureStackUser
      displayName: Switch az cli to use Azure Stack cloud

    - script: |
        az login --service-principal -u $(sp_app_id) \
          -p $(sp_secret) \
          --tenant $(sp_tenant_id)
      displayName: az login with service principal

    - script: az account set -s $(azs_subscription_id)
      displayName: Set az account to the right subscription id

    - script: |
        az group create -n $(rg_name) -l $(azs_location)
      displayName: create a resource group

    - script: ssh-keygen -t rsa -b 4096 -C "auto generated ssh key" -f $(local_id) -P ''
      displayName: generate ssh-key

    - script: |
        az keyvault create \
          -n $(keyvault_name) \
          -g $(rg_name) \
          -l $(azs_location) \
          --enabled-for-template-deployment true
      displayName: create a keyvault
    
    - script: |
        az keyvault secret set \
          --vault-name $(keyvault_name) \
          -n sshPrivateKey \
          --file $(local_id)
      displayName: store ssh private key in keyvault

    - script: |
        admin_pass=`openssl rand -base64 32`
        az keyvault secret set \
          --vault-name  $(keyvault_name) \
          -n openshiftPassword --value $admin_pass
      displayName: generate and store the admin password in keyvault

    - script: |
        az keyvault secret set \
          --vault-name  $(keyvault_name) \
          -n rhsmPasswordOrActivationKey  --value $(arm_rhsm_password_or_activation_key)
      displayName: store the Red Hat Subscription Manager password in keyvault

    - script: |
        az keyvault secret set \
          --vault-name  $(keyvault_name) \
          -n aadClientSecret  --value fake
      displayName: store a fake aadClientSecret in keyvault because it's always get

    # - script: |
    #     az network dns zone create \
    #       --resource-group $(rg_name) \
    #       --name $(zone)
    #     az network dns record-set a add-record \
    #       -n $(masterapi_sname) \
    #       -g $(rg_name) \
    #       -z $(zone) \
    #       -a $(masterapi_ip)
    #   displayName: Create a DNS zone and add the internal api record
      
    - script: |
        echo '{ "publisher": "$(azs_redhat_publisher)", "offer": "$(azs_redhat_offer)", "sku": "$(azs_redhat_sku)", "version": "$(azs_redhat_version)" }' > rhel_image.json
        cat rhel_image.json
        echo '$(arm_rhsm_pool_id)' > rhsm_pool_id
        echo '$(arm_rhsm_username_or_org_Id)' > rhsm_user
        az group deployment create --template-file $(Build.SourcesDirectory)/azuredeploy.json \
          --name ocp \
          -g $(rg_name) \
          --parameters @$(Build.SourcesDirectory)/azuredeploy.parameters.json \
          _artifactsLocation=$(artifacts_location) \
          storageKind=managed \
          openshiftClusterPrefix=ocp2mlbsscerts \
          osImageType=marketplace \
          adminUsername=ocpadmin \
          rhsmUsernameOrOrgId=@rhsm_user \
          rhsmPoolId=@rhsm_pool_id \
          rhsmBrokerPoolId=@rhsm_pool_id \
          sshPublicKey=@$(local_id).pub \
          keyVaultSubscriptionId=$(azs_subscription_id) \
          keyVaultResourceGroup=$(rg_name) \
          keyVaultName=$(keyvault_name)  \
          automaticDeployment=automatic \
          automaticPrep=automatic \
          marketplaceOsImage=@rhel_image.json \
          virtualNetworkName=vnet-$(local_id) \
          masterSubnetName=mastersubnet \
          infraSubnetName=infrasubnet \
          nodeSubnetName=nodesubnet \
          masterClusterDnsType=default \
          domainName=none \
          masterPrivateClusterIp=$(masterapi_ip) \
          masterAPIDns=$(masterapi_sname).$(zone)
      displayName: run the ARM template

          

          
